# requirements.txt - this file lists external packages the project needs
# Ignore hashes (or number signs or pound signs) - they are used to write comments. 
# Comments are ignored when we install packages using this file. 

# ======================================================
# STEP A - CREATE A LOCAL PROJECT VIRTUAL ENV (.venv)
# ======================================================

# Create your local project virtual environment
# This step ensures you have an isolated Python environment for your project.
# This is typically just done once at the beginning of a project.
# If it gets messed up, we can delete .venv and recreate it at any time. 

# Run the following command to create a virtual environment in the project root.

### On Windows, Use PowerShell (not cmd) - don't include the #:
# py -m venv .venv

### On Mac/Linux, Use zsh or bash (or PowerShell) - don't include the #:
# python3 -m venv .venv

# ======================================================
# STEP B - ALWAYS ACTIVATE THE (.venv) WHEN WORKING ON YOUR PROJECT
# ======================================================

# ALWAYS activate the .venv before working on the project.
# Activate whenever you open a new terminal. 

### Windows Command (don't include the #):
# .venv\Scripts\activate

### Mac/Linux Command (don't include the #):
# source .venv/bin/activate

# Verify: When active, you can usually see (.venv) in the terminal.

# ======================================================
# STEP C - INSTALL PACKAGES INTO .venv AS NEEDED
# ======================================================

# Keep packages updated with the most recent versions.
# When you identify a new package you want to use, 
# Just update the list below and re-run this command. 
# It will install and update all the packages listed in this file. 

### Windows Command (don't include the #):
# py -m pip install --upgrade -r requirements.txt

### Mac/Linux Command (don't include the #):
# python3 -m pip install --upgrade -r requirements.txt

# ======================================================
# LIST EXTERNAL PACKAGES TO BE INSTALLED BELOW
# ======================================================

# Keep pip upgraded (manages the installation of packages)
pip

# Easy logging to keep track of code execution 
loguru

# Data analysis
numpy
pandas

# Data visualization
matplotlib
seaborn
plotly

# Easy access to modern Excel files (*.xlsx)
openpyxl

pyspark
ipkernel
notebook